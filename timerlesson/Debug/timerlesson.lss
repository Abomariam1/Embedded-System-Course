
timerlesson.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000bfc  00000c90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bfc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  0080010c  0080010c  00000c9c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ccc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00000d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b2f  00000000  00000000  00000fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f7a  00000000  00000000  00003ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017ed  00000000  00000000  00004a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000630  00000000  00000000  0000623c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000fd3  00000000  00000000  0000686c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a38  00000000  00000000  0000783f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  00009277  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 44 00 	jmp	0x88	; 0x88 <__ctors_end>
   4:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__vector_1>
   8:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <__vector_2>
   c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  10:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  14:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  18:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  1c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  20:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  24:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  28:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  2c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  30:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  34:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  38:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  3c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  40:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__vector_16>
  44:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  48:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  4c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  50:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  54:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  58:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  5c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  60:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  64:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
  68:	42 03       	mulsu	r20, r18
  6a:	4e 03       	fmul	r20, r22
  6c:	5a 03       	fmul	r21, r18
  6e:	66 03       	mulsu	r22, r22
  70:	72 03       	mulsu	r23, r18
  72:	7e 03       	fmul	r23, r22
  74:	8a 03       	fmulsu	r16, r18
  76:	10 04       	cpc	r1, r0
  78:	16 04       	cpc	r1, r6
  7a:	27 04       	cpc	r2, r7
  7c:	38 04       	cpc	r3, r8
  7e:	49 04       	cpc	r4, r9
  80:	5a 04       	cpc	r5, r10
  82:	6b 04       	cpc	r6, r11
  84:	7c 04       	cpc	r7, r12
  86:	8d 04       	cpc	r8, r13

00000088 <__ctors_end>:
  88:	11 24       	eor	r1, r1
  8a:	1f be       	out	0x3f, r1	; 63
  8c:	cf ef       	ldi	r28, 0xFF	; 255
  8e:	d8 e0       	ldi	r29, 0x08	; 8
  90:	de bf       	out	0x3e, r29	; 62
  92:	cd bf       	out	0x3d, r28	; 61

00000094 <__do_copy_data>:
  94:	11 e0       	ldi	r17, 0x01	; 1
  96:	a0 e0       	ldi	r26, 0x00	; 0
  98:	b1 e0       	ldi	r27, 0x01	; 1
  9a:	ec ef       	ldi	r30, 0xFC	; 252
  9c:	fb e0       	ldi	r31, 0x0B	; 11
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <__do_copy_data+0x10>
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	ac 30       	cpi	r26, 0x0C	; 12
  a6:	b1 07       	cpc	r27, r17
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0xc>

000000aa <__do_clear_bss>:
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	ac e0       	ldi	r26, 0x0C	; 12
  ae:	b1 e0       	ldi	r27, 0x01	; 1
  b0:	01 c0       	rjmp	.+2      	; 0xb4 <.do_clear_bss_start>

000000b2 <.do_clear_bss_loop>:
  b2:	1d 92       	st	X+, r1

000000b4 <.do_clear_bss_start>:
  b4:	ac 32       	cpi	r26, 0x2C	; 44
  b6:	b2 07       	cpc	r27, r18
  b8:	e1 f7       	brne	.-8      	; 0xb2 <.do_clear_bss_loop>
  ba:	0e 94 aa 02 	call	0x554	; 0x554 <main>
  be:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <_exit>

000000c2 <__bad_interrupt>:
  c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c6 <LCD_WriteCommand>:
		for(j=i;j>0;j--)
		{
			LCD_SendData(arr[j-1]);
		}
	}
}
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	c8 2f       	mov	r28, r24
  cc:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
  d0:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
  d4:	80 81       	ld	r24, Z
  d6:	88 23       	and	r24, r24
  d8:	29 f1       	breq	.+74     	; 0x124 <LCD_WriteCommand+0x5e>
  da:	82 30       	cpi	r24, 0x02	; 2
  dc:	09 f0       	breq	.+2      	; 0xe0 <LCD_WriteCommand+0x1a>
  de:	76 c0       	rjmp	.+236    	; 0x1cc <LCD_WriteCommand+0x106>
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	61 81       	ldd	r22, Z+1	; 0x01
  e4:	84 81       	ldd	r24, Z+4	; 0x04
  e6:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
  ea:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
  ee:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
  f2:	6c 2f       	mov	r22, r28
  f4:	83 81       	ldd	r24, Z+3	; 0x03
  f6:	0e 94 3c 05 	call	0xa78	; 0xa78 <GPIO_write_port>
  fa:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
  fe:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 102:	41 e0       	ldi	r20, 0x01	; 1
 104:	62 81       	ldd	r22, Z+2	; 0x02
 106:	84 81       	ldd	r24, Z+4	; 0x04
 108:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <LCD_WriteCommand+0x48>
 10e:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 112:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 116:	40 e0       	ldi	r20, 0x00	; 0
 118:	62 81       	ldd	r22, Z+2	; 0x02
 11a:	84 81       	ldd	r24, Z+4	; 0x04
 11c:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_WriteCommand+0x5c>
 122:	54 c0       	rjmp	.+168    	; 0x1cc <LCD_WriteCommand+0x106>
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	83 81       	ldd	r24, Z+3	; 0x03
 128:	be 01       	movw	r22, r28
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 47 05 	call	0xa8e	; 0xa8e <GPIO_write_port_mask_HN>
 130:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 134:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 138:	40 e0       	ldi	r20, 0x00	; 0
 13a:	61 81       	ldd	r22, Z+1	; 0x01
 13c:	83 81       	ldd	r24, Z+3	; 0x03
 13e:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 142:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 146:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 14a:	41 e0       	ldi	r20, 0x01	; 1
 14c:	62 81       	ldd	r22, Z+2	; 0x02
 14e:	83 81       	ldd	r24, Z+3	; 0x03
 150:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 154:	83 ef       	ldi	r24, 0xF3	; 243
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <LCD_WriteCommand+0x92>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <LCD_WriteCommand+0x98>
 15e:	00 00       	nop
 160:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 164:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 168:	40 e0       	ldi	r20, 0x00	; 0
 16a:	62 81       	ldd	r22, Z+2	; 0x02
 16c:	83 81       	ldd	r24, Z+3	; 0x03
 16e:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 172:	83 ef       	ldi	r24, 0xF3	; 243
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <LCD_WriteCommand+0xb0>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <LCD_WriteCommand+0xb6>
 17c:	00 00       	nop
 17e:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 182:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 186:	83 81       	ldd	r24, Z+3	; 0x03
 188:	be 01       	movw	r22, r28
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 5a 05 	call	0xab4	; 0xab4 <GPIO_write_port_mask_LN>
 190:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 194:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 198:	41 e0       	ldi	r20, 0x01	; 1
 19a:	62 81       	ldd	r22, Z+2	; 0x02
 19c:	83 81       	ldd	r24, Z+3	; 0x03
 19e:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 1a2:	83 ef       	ldi	r24, 0xF3	; 243
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_WriteCommand+0xe0>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_WriteCommand+0xe6>
 1ac:	00 00       	nop
 1ae:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 1b2:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	62 81       	ldd	r22, Z+2	; 0x02
 1ba:	83 81       	ldd	r24, Z+3	; 0x03
 1bc:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 1c0:	83 ef       	ldi	r24, 0xF3	; 243
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_WriteCommand+0xfe>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_WriteCommand+0x104>
 1ca:	00 00       	nop
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <Lcd_Init2>:
 1d2:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 1d6:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 1da:	80 81       	ld	r24, Z
 1dc:	88 23       	and	r24, r24
 1de:	f1 f1       	breq	.+124    	; 0x25c <Lcd_Init2+0x8a>
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	09 f0       	breq	.+2      	; 0x1e6 <Lcd_Init2+0x14>
 1e4:	69 c0       	rjmp	.+210    	; 0x2b8 <Lcd_Init2+0xe6>
 1e6:	61 e0       	ldi	r22, 0x01	; 1
 1e8:	83 81       	ldd	r24, Z+3	; 0x03
 1ea:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <GPIO_init_port>
 1ee:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 1f2:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 1f6:	41 e0       	ldi	r20, 0x01	; 1
 1f8:	61 81       	ldd	r22, Z+1	; 0x01
 1fa:	84 81       	ldd	r24, Z+4	; 0x04
 1fc:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <GPIO_init_pin>
 200:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 204:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 208:	41 e0       	ldi	r20, 0x01	; 1
 20a:	62 81       	ldd	r22, Z+2	; 0x02
 20c:	84 81       	ldd	r24, Z+4	; 0x04
 20e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <GPIO_init_pin>
 212:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 216:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 21a:	40 e0       	ldi	r20, 0x00	; 0
 21c:	61 81       	ldd	r22, Z+1	; 0x01
 21e:	84 81       	ldd	r24, Z+4	; 0x04
 220:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 224:	88 e3       	ldi	r24, 0x38	; 56
 226:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 22a:	83 ef       	ldi	r24, 0xF3	; 243
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <Lcd_Init2+0x5c>
 232:	00 c0       	rjmp	.+0      	; 0x234 <Lcd_Init2+0x62>
 234:	00 00       	nop
 236:	8e e0       	ldi	r24, 0x0E	; 14
 238:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 23c:	83 ef       	ldi	r24, 0xF3	; 243
 23e:	91 e0       	ldi	r25, 0x01	; 1
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <Lcd_Init2+0x6e>
 244:	00 c0       	rjmp	.+0      	; 0x246 <Lcd_Init2+0x74>
 246:	00 00       	nop
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 24e:	83 ef       	ldi	r24, 0xF3	; 243
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <Lcd_Init2+0x80>
 256:	00 c0       	rjmp	.+0      	; 0x258 <Lcd_Init2+0x86>
 258:	00 00       	nop
 25a:	08 95       	ret
 25c:	65 81       	ldd	r22, Z+5	; 0x05
 25e:	83 81       	ldd	r24, Z+3	; 0x03
 260:	0e 94 05 05 	call	0xa0a	; 0xa0a <GPIO_init_port_mask>
 264:	82 e0       	ldi	r24, 0x02	; 2
 266:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 26a:	83 ef       	ldi	r24, 0xF3	; 243
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	01 97       	sbiw	r24, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <Lcd_Init2+0x9c>
 272:	00 c0       	rjmp	.+0      	; 0x274 <Lcd_Init2+0xa2>
 274:	00 00       	nop
 276:	88 e2       	ldi	r24, 0x28	; 40
 278:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 27c:	83 ef       	ldi	r24, 0xF3	; 243
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <Lcd_Init2+0xae>
 284:	00 c0       	rjmp	.+0      	; 0x286 <Lcd_Init2+0xb4>
 286:	00 00       	nop
 288:	8c e0       	ldi	r24, 0x0C	; 12
 28a:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 28e:	83 ef       	ldi	r24, 0xF3	; 243
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	f1 f7       	brne	.-4      	; 0x292 <Lcd_Init2+0xc0>
 296:	00 c0       	rjmp	.+0      	; 0x298 <Lcd_Init2+0xc6>
 298:	00 00       	nop
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 2a0:	83 ef       	ldi	r24, 0xF3	; 243
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <Lcd_Init2+0xd2>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <Lcd_Init2+0xd8>
 2aa:	00 00       	nop
 2ac:	86 e0       	ldi	r24, 0x06	; 6
 2ae:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 2b2:	80 e8       	ldi	r24, 0x80	; 128
 2b4:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 2b8:	08 95       	ret

000002ba <LCD_SendData>:
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
 2be:	c8 2f       	mov	r28, r24
 2c0:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 2c4:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 2c8:	80 81       	ld	r24, Z
 2ca:	88 23       	and	r24, r24
 2cc:	29 f1       	breq	.+74     	; 0x318 <LCD_SendData+0x5e>
 2ce:	82 30       	cpi	r24, 0x02	; 2
 2d0:	09 f0       	breq	.+2      	; 0x2d4 <LCD_SendData+0x1a>
 2d2:	76 c0       	rjmp	.+236    	; 0x3c0 <LCD_SendData+0x106>
 2d4:	41 e0       	ldi	r20, 0x01	; 1
 2d6:	61 81       	ldd	r22, Z+1	; 0x01
 2d8:	84 81       	ldd	r24, Z+4	; 0x04
 2da:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 2de:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 2e2:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 2e6:	6c 2f       	mov	r22, r28
 2e8:	83 81       	ldd	r24, Z+3	; 0x03
 2ea:	0e 94 3c 05 	call	0xa78	; 0xa78 <GPIO_write_port>
 2ee:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 2f2:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 2f6:	41 e0       	ldi	r20, 0x01	; 1
 2f8:	62 81       	ldd	r22, Z+2	; 0x02
 2fa:	84 81       	ldd	r24, Z+4	; 0x04
 2fc:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 300:	00 c0       	rjmp	.+0      	; 0x302 <LCD_SendData+0x48>
 302:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 306:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 30a:	40 e0       	ldi	r20, 0x00	; 0
 30c:	62 81       	ldd	r22, Z+2	; 0x02
 30e:	84 81       	ldd	r24, Z+4	; 0x04
 310:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 314:	00 c0       	rjmp	.+0      	; 0x316 <LCD_SendData+0x5c>
 316:	54 c0       	rjmp	.+168    	; 0x3c0 <LCD_SendData+0x106>
 318:	41 e0       	ldi	r20, 0x01	; 1
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	84 81       	ldd	r24, Z+4	; 0x04
 31e:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 322:	d0 e0       	ldi	r29, 0x00	; 0
 324:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 328:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 32c:	83 81       	ldd	r24, Z+3	; 0x03
 32e:	be 01       	movw	r22, r28
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	0e 94 47 05 	call	0xa8e	; 0xa8e <GPIO_write_port_mask_HN>
 336:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 33a:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 33e:	41 e0       	ldi	r20, 0x01	; 1
 340:	62 81       	ldd	r22, Z+2	; 0x02
 342:	84 81       	ldd	r24, Z+4	; 0x04
 344:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 348:	83 ef       	ldi	r24, 0xF3	; 243
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	f1 f7       	brne	.-4      	; 0x34c <LCD_SendData+0x92>
 350:	00 c0       	rjmp	.+0      	; 0x352 <LCD_SendData+0x98>
 352:	00 00       	nop
 354:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 358:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 35c:	40 e0       	ldi	r20, 0x00	; 0
 35e:	62 81       	ldd	r22, Z+2	; 0x02
 360:	84 81       	ldd	r24, Z+4	; 0x04
 362:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 366:	83 ef       	ldi	r24, 0xF3	; 243
 368:	91 e0       	ldi	r25, 0x01	; 1
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <LCD_SendData+0xb0>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <LCD_SendData+0xb6>
 370:	00 00       	nop
 372:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 376:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 37a:	83 81       	ldd	r24, Z+3	; 0x03
 37c:	be 01       	movw	r22, r28
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	0e 94 5a 05 	call	0xab4	; 0xab4 <GPIO_write_port_mask_LN>
 384:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 388:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 38c:	41 e0       	ldi	r20, 0x01	; 1
 38e:	62 81       	ldd	r22, Z+2	; 0x02
 390:	84 81       	ldd	r24, Z+4	; 0x04
 392:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 396:	83 ef       	ldi	r24, 0xF3	; 243
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	01 97       	sbiw	r24, 0x01	; 1
 39c:	f1 f7       	brne	.-4      	; 0x39a <LCD_SendData+0xe0>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <LCD_SendData+0xe6>
 3a0:	00 00       	nop
 3a2:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 3a6:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__data_end+0x1>
 3aa:	40 e0       	ldi	r20, 0x00	; 0
 3ac:	62 81       	ldd	r22, Z+2	; 0x02
 3ae:	84 81       	ldd	r24, Z+4	; 0x04
 3b0:	0e 94 12 05 	call	0xa24	; 0xa24 <GPIO_write_pin>
 3b4:	83 ef       	ldi	r24, 0xF3	; 243
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <LCD_SendData+0xfe>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <LCD_SendData+0x104>
 3be:	00 00       	nop
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	08 95       	ret

000003c6 <Lcd_Init>:
 3c6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 3ca:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 3ce:	83 ed       	ldi	r24, 0xD3	; 211
 3d0:	90 e3       	ldi	r25, 0x30	; 48
 3d2:	01 97       	sbiw	r24, 0x01	; 1
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <Lcd_Init+0xc>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <Lcd_Init+0x12>
 3d8:	00 00       	nop
 3da:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <Lcd_Init2>
 3de:	08 95       	ret

000003e0 <LCD_WriteChar>:
 3e0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_SendData>
 3e4:	08 95       	ret

000003e6 <LCD_Clear>:
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 3ec:	08 95       	ret

000003ee <LCD_GoTo>:
 3ee:	81 11       	cpse	r24, r1
 3f0:	07 c0       	rjmp	.+14     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3f2:	60 31       	cpi	r22, 0x10	; 16
 3f4:	68 f4       	brcc	.+26     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3f6:	80 e8       	ldi	r24, 0x80	; 128
 3f8:	86 0f       	add	r24, r22
 3fa:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 3fe:	08 95       	ret
 400:	81 30       	cpi	r24, 0x01	; 1
 402:	31 f4       	brne	.+12     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 404:	60 31       	cpi	r22, 0x10	; 16
 406:	20 f4       	brcc	.+8      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 408:	80 ec       	ldi	r24, 0xC0	; 192
 40a:	86 0f       	add	r24, r22
 40c:	0e 94 63 00 	call	0xc6	; 0xc6 <LCD_WriteCommand>
 410:	08 95       	ret

00000412 <LCD_WriteNumber2>:

void LCD_WriteNumber2(uint16 Number)
{
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	ec 01       	movw	r28, r24
	LCD_SendData(Number%10000/1000+'0');
 418:	9c 01       	movw	r18, r24
 41a:	32 95       	swap	r19
 41c:	22 95       	swap	r18
 41e:	2f 70       	andi	r18, 0x0F	; 15
 420:	23 27       	eor	r18, r19
 422:	3f 70       	andi	r19, 0x0F	; 15
 424:	23 27       	eor	r18, r19
 426:	a7 e4       	ldi	r26, 0x47	; 71
 428:	b3 e0       	ldi	r27, 0x03	; 3
 42a:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 42e:	96 95       	lsr	r25
 430:	87 95       	ror	r24
 432:	96 95       	lsr	r25
 434:	87 95       	ror	r24
 436:	96 95       	lsr	r25
 438:	87 95       	ror	r24
 43a:	40 e1       	ldi	r20, 0x10	; 16
 43c:	57 e2       	ldi	r21, 0x27	; 39
 43e:	84 9f       	mul	r24, r20
 440:	90 01       	movw	r18, r0
 442:	85 9f       	mul	r24, r21
 444:	30 0d       	add	r19, r0
 446:	94 9f       	mul	r25, r20
 448:	30 0d       	add	r19, r0
 44a:	11 24       	eor	r1, r1
 44c:	ce 01       	movw	r24, r28
 44e:	82 1b       	sub	r24, r18
 450:	93 0b       	sbc	r25, r19
 452:	9c 01       	movw	r18, r24
 454:	36 95       	lsr	r19
 456:	27 95       	ror	r18
 458:	36 95       	lsr	r19
 45a:	27 95       	ror	r18
 45c:	36 95       	lsr	r19
 45e:	27 95       	ror	r18
 460:	a5 ec       	ldi	r26, 0xC5	; 197
 462:	b0 e2       	ldi	r27, 0x20	; 32
 464:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 468:	92 95       	swap	r25
 46a:	82 95       	swap	r24
 46c:	8f 70       	andi	r24, 0x0F	; 15
 46e:	89 27       	eor	r24, r25
 470:	9f 70       	andi	r25, 0x0F	; 15
 472:	89 27       	eor	r24, r25
 474:	80 5d       	subi	r24, 0xD0	; 208
 476:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_SendData>
	LCD_SendData(Number%1000/100+'0');
 47a:	9e 01       	movw	r18, r28
 47c:	36 95       	lsr	r19
 47e:	27 95       	ror	r18
 480:	36 95       	lsr	r19
 482:	27 95       	ror	r18
 484:	36 95       	lsr	r19
 486:	27 95       	ror	r18
 488:	a5 ec       	ldi	r26, 0xC5	; 197
 48a:	b0 e2       	ldi	r27, 0x20	; 32
 48c:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 490:	92 95       	swap	r25
 492:	82 95       	swap	r24
 494:	8f 70       	andi	r24, 0x0F	; 15
 496:	89 27       	eor	r24, r25
 498:	9f 70       	andi	r25, 0x0F	; 15
 49a:	89 27       	eor	r24, r25
 49c:	48 ee       	ldi	r20, 0xE8	; 232
 49e:	53 e0       	ldi	r21, 0x03	; 3
 4a0:	84 9f       	mul	r24, r20
 4a2:	90 01       	movw	r18, r0
 4a4:	85 9f       	mul	r24, r21
 4a6:	30 0d       	add	r19, r0
 4a8:	94 9f       	mul	r25, r20
 4aa:	30 0d       	add	r19, r0
 4ac:	11 24       	eor	r1, r1
 4ae:	ce 01       	movw	r24, r28
 4b0:	82 1b       	sub	r24, r18
 4b2:	93 0b       	sbc	r25, r19
 4b4:	9c 01       	movw	r18, r24
 4b6:	36 95       	lsr	r19
 4b8:	27 95       	ror	r18
 4ba:	36 95       	lsr	r19
 4bc:	27 95       	ror	r18
 4be:	ab e7       	ldi	r26, 0x7B	; 123
 4c0:	b4 e1       	ldi	r27, 0x14	; 20
 4c2:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 4c6:	96 95       	lsr	r25
 4c8:	87 95       	ror	r24
 4ca:	80 5d       	subi	r24, 0xD0	; 208
 4cc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_SendData>
	LCD_SendData(Number%100/10+'0');
 4d0:	9e 01       	movw	r18, r28
 4d2:	36 95       	lsr	r19
 4d4:	27 95       	ror	r18
 4d6:	36 95       	lsr	r19
 4d8:	27 95       	ror	r18
 4da:	ab e7       	ldi	r26, 0x7B	; 123
 4dc:	b4 e1       	ldi	r27, 0x14	; 20
 4de:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 4e2:	9c 01       	movw	r18, r24
 4e4:	36 95       	lsr	r19
 4e6:	27 95       	ror	r18
 4e8:	44 e6       	ldi	r20, 0x64	; 100
 4ea:	42 9f       	mul	r20, r18
 4ec:	c0 01       	movw	r24, r0
 4ee:	43 9f       	mul	r20, r19
 4f0:	90 0d       	add	r25, r0
 4f2:	11 24       	eor	r1, r1
 4f4:	9e 01       	movw	r18, r28
 4f6:	28 1b       	sub	r18, r24
 4f8:	39 0b       	sbc	r19, r25
 4fa:	ad ec       	ldi	r26, 0xCD	; 205
 4fc:	bc ec       	ldi	r27, 0xCC	; 204
 4fe:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 502:	96 95       	lsr	r25
 504:	87 95       	ror	r24
 506:	96 95       	lsr	r25
 508:	87 95       	ror	r24
 50a:	96 95       	lsr	r25
 50c:	87 95       	ror	r24
 50e:	80 5d       	subi	r24, 0xD0	; 208
 510:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_SendData>
	LCD_SendData(Number%10/1+'0');
 514:	9e 01       	movw	r18, r28
 516:	ad ec       	ldi	r26, 0xCD	; 205
 518:	bc ec       	ldi	r27, 0xCC	; 204
 51a:	0e 94 ed 05 	call	0xbda	; 0xbda <__umulhisi3>
 51e:	96 95       	lsr	r25
 520:	87 95       	ror	r24
 522:	96 95       	lsr	r25
 524:	87 95       	ror	r24
 526:	96 95       	lsr	r25
 528:	87 95       	ror	r24
 52a:	9c 01       	movw	r18, r24
 52c:	22 0f       	add	r18, r18
 52e:	33 1f       	adc	r19, r19
 530:	88 0f       	add	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	88 0f       	add	r24, r24
 536:	99 1f       	adc	r25, r25
 538:	88 0f       	add	r24, r24
 53a:	99 1f       	adc	r25, r25
 53c:	82 0f       	add	r24, r18
 53e:	93 1f       	adc	r25, r19
 540:	9e 01       	movw	r18, r28
 542:	28 1b       	sub	r18, r24
 544:	39 0b       	sbc	r19, r25
 546:	c9 01       	movw	r24, r18
 548:	80 5d       	subi	r24, 0xD0	; 208
 54a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_SendData>
}
 54e:	df 91       	pop	r29
 550:	cf 91       	pop	r28
 552:	08 95       	ret

00000554 <main>:
	/* button_interrupt.interruptBtn_CallbackctionPtr=Btn_Callback;//set Btn_Callbackction to callback Btn_Callbackction
	button_interrupt.interruptPinSelect=EXT_INTERRPUT_INT0_PD2 ;//select external interrupt pin
	button_interrupt.interruptSenseControl=FALLING_EDGE_OF_INTERRUPT;//select type of edge detector
	GPIO_init_inte rrupt(&button_interrupt);//call init Btn_Callbackction to prepared interrupt to use
	*/
	LCDObj.Mode = M_4BIT_SAMEPORT;
 554:	ea e1       	ldi	r30, 0x1A	; 26
 556:	f1 e0       	ldi	r31, 0x01	; 1
 558:	10 82       	st	Z, r1
	LCDObj.DataPort = GPIO_D;
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	83 83       	std	Z+3, r24	; 0x03
	LCDObj.cmdport= GPIO_D;
 55e:	84 83       	std	Z+4, r24	; 0x04
	LCDObj.RSPin = 0;
 560:	11 82       	std	Z+1, r1	; 0x01
	LCDObj.EnPin = 1;
 562:	c1 e0       	ldi	r28, 0x01	; 1
 564:	c2 83       	std	Z+2, r28	; 0x02
	LCDObj.PortVal = 0xF3;
 566:	83 ef       	ldi	r24, 0xF3	; 243
 568:	85 83       	std	Z+5, r24	; 0x05
	Lcd_Init(&LCDObj);
 56a:	cf 01       	movw	r24, r30
 56c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <Lcd_Init>
	
	ADCInitObject.ADC_ADLER = ADC_ADLER_RIGHT;
 570:	e4 e1       	ldi	r30, 0x14	; 20
 572:	f1 e0       	ldi	r31, 0x01	; 1
 574:	14 82       	std	Z+4, r1	; 0x04
	ADCInitObject.ADC_ATrigger_Selections = ADC_AT_DISABLE;
 576:	13 82       	std	Z+3, r1	; 0x03
	ADCInitObject.ADC_INPUT_CHANEL = ADC0;
 578:	11 82       	std	Z+1, r1	; 0x01
	ADCInitObject.ADC_PRESCALER = FACTOR_8;
 57a:	83 e0       	ldi	r24, 0x03	; 3
 57c:	82 83       	std	Z+2, r24	; 0x02
	ADCInitObject.ADC_VREF = AREF;
 57e:	10 82       	st	Z, r1
	ADCInitObject.ADC_INTERRUPT_Stats = DisableInterrupt;
 580:	c5 83       	std	Z+5, r28	; 0x05
	ADC_Init(&ADCInitObject);
 582:	cf 01       	movw	r24, r30
 584:	0e 94 01 03 	call	0x602	; 0x602 <ADC_Init>
	uint16 u16AdcRecev=0,u16old_val=0;
 588:	e1 2c       	mov	r14, r1
 58a:	f1 2c       	mov	r15, r1
		//while (arr[i])
		//{//
			//LCD_WriteChar(arr[i]);
			//i++;
		//}
		flag = GET_BIT(ADCSRA,ADIF);
 58c:	10 91 7a 00 	lds	r17, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 590:	12 95       	swap	r17
 592:	11 70       	andi	r17, 0x01	; 1
		u16AdcRecev=Get_ADCRegister();
 594:	0e 94 c2 04 	call	0x984	; 0x984 <Get_ADCRegister>
 598:	ec 01       	movw	r28, r24
		 
		if (flag)
 59a:	11 23       	and	r17, r17
 59c:	21 f0       	breq	.+8      	; 0x5a6 <main+0x52>
		{
			LCD_WriteChar('1') ;
 59e:	81 e3       	ldi	r24, 0x31	; 49
 5a0:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <LCD_WriteChar>
 5a4:	03 c0       	rjmp	.+6      	; 0x5ac <main+0x58>
		}
		else
		{
			LCD_WriteChar('0') ;
 5a6:	80 e3       	ldi	r24, 0x30	; 48
 5a8:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <LCD_WriteChar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5ac:	2f eb       	ldi	r18, 0xBF	; 191
 5ae:	84 ed       	ldi	r24, 0xD4	; 212
 5b0:	91 e0       	ldi	r25, 0x01	; 1
 5b2:	21 50       	subi	r18, 0x01	; 1
 5b4:	80 40       	sbci	r24, 0x00	; 0
 5b6:	90 40       	sbci	r25, 0x00	; 0
 5b8:	e1 f7       	brne	.-8      	; 0x5b2 <main+0x5e>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <main+0x68>
 5bc:	00 00       	nop
		}
		_delay_ms(600);
		if(u16AdcRecev!=u16old_val)
 5be:	ec 16       	cp	r14, r28
 5c0:	fd 06       	cpc	r15, r29
 5c2:	71 f0       	breq	.+28     	; 0x5e0 <main+0x8c>
		{
			cli(); //critical section protection
 5c4:	f8 94       	cli
			LCD_Clear();
 5c6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LCD_Clear>
			LCD_GoTo(0, 0);
 5ca:	60 e0       	ldi	r22, 0x00	; 0
 5cc:	70 e0       	ldi	r23, 0x00	; 0
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 94 f7 01 	call	0x3ee	; 0x3ee <LCD_GoTo>
			u16old_val = u16AdcRecev;
			LCD_WriteNumber2((uint16)u16AdcRecev);
 5d6:	ce 01       	movw	r24, r28
 5d8:	0e 94 09 02 	call	0x412	; 0x412 <LCD_WriteNumber2>
			sei();//critical section protection
 5dc:	78 94       	sei
		if(u16AdcRecev!=u16old_val)
		{
			cli(); //critical section protection
			LCD_Clear();
			LCD_GoTo(0, 0);
			u16old_val = u16AdcRecev;
 5de:	7e 01       	movw	r14, r28
			LCD_WriteNumber2((uint16)u16AdcRecev);
			sei();//critical section protection
		}
		LCD_Clear();
 5e0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LCD_Clear>
		LCD_WriteNumber2((uint16)u16AdcRecev);
 5e4:	ce 01       	movw	r24, r28
 5e6:	0e 94 09 02 	call	0x412	; 0x412 <LCD_WriteNumber2>
 5ea:	2f eb       	ldi	r18, 0xBF	; 191
 5ec:	84 ed       	ldi	r24, 0xD4	; 212
 5ee:	91 e0       	ldi	r25, 0x01	; 1
 5f0:	21 50       	subi	r18, 0x01	; 1
 5f2:	80 40       	sbci	r24, 0x00	; 0
 5f4:	90 40       	sbci	r25, 0x00	; 0
 5f6:	e1 f7       	brne	.-8      	; 0x5f0 <main+0x9c>
 5f8:	00 c0       	rjmp	.+0      	; 0x5fa <main+0xa6>
 5fa:	00 00       	nop
		_delay_ms(600);
		LCD_Clear();
 5fc:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LCD_Clear>
			//LCD_WriteChar(arr2[H]);
			//H++;
		//}
		//_delay_ms(500);

	}
 600:	c5 cf       	rjmp	.-118    	; 0x58c <main+0x38>

00000602 <ADC_Init>:

		case TIMER1CAPTCHER:
		WRITE_BIT(ADCSRA,ADATE,HIGH);
		WRITE_BIT(ADCSRB,ADTS0,HIGH);
		WRITE_BIT(ADCSRB,ADTS1,HIGH);
		WRITE_BIT(ADCSRB,ADTS2,HIGH);
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	ec 01       	movw	r28, r24
 608:	86 e0       	ldi	r24, 0x06	; 6
 60a:	fe 01       	movw	r30, r28
 60c:	a6 e2       	ldi	r26, 0x26	; 38
 60e:	b1 e0       	ldi	r27, 0x01	; 1
 610:	01 90       	ld	r0, Z+
 612:	0d 92       	st	X+, r0
 614:	8a 95       	dec	r24
 616:	e1 f7       	brne	.-8      	; 0x610 <ADC_Init+0xe>
 618:	ea e7       	ldi	r30, 0x7A	; 122
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	80 81       	ld	r24, Z
 61e:	80 68       	ori	r24, 0x80	; 128
 620:	80 83       	st	Z, r24
 622:	80 81       	ld	r24, Z
 624:	80 64       	ori	r24, 0x40	; 64
 626:	80 83       	st	Z, r24
 628:	88 81       	ld	r24, Y
 62a:	81 30       	cpi	r24, 0x01	; 1
 62c:	69 f0       	breq	.+26     	; 0x648 <ADC_Init+0x46>
 62e:	18 f0       	brcs	.+6      	; 0x636 <ADC_Init+0x34>
 630:	83 30       	cpi	r24, 0x03	; 3
 632:	99 f0       	breq	.+38     	; 0x65a <ADC_Init+0x58>
 634:	1a c0       	rjmp	.+52     	; 0x66a <ADC_Init+0x68>
 636:	ec e7       	ldi	r30, 0x7C	; 124
 638:	f0 e0       	ldi	r31, 0x00	; 0
 63a:	80 81       	ld	r24, Z
 63c:	8f 77       	andi	r24, 0x7F	; 127
 63e:	80 83       	st	Z, r24
 640:	80 81       	ld	r24, Z
 642:	8f 7b       	andi	r24, 0xBF	; 191
 644:	80 83       	st	Z, r24
 646:	11 c0       	rjmp	.+34     	; 0x66a <ADC_Init+0x68>
 648:	ec e7       	ldi	r30, 0x7C	; 124
 64a:	f0 e0       	ldi	r31, 0x00	; 0
 64c:	80 81       	ld	r24, Z
 64e:	8f 77       	andi	r24, 0x7F	; 127
 650:	80 83       	st	Z, r24
 652:	80 81       	ld	r24, Z
 654:	80 64       	ori	r24, 0x40	; 64
 656:	80 83       	st	Z, r24
 658:	08 c0       	rjmp	.+16     	; 0x66a <ADC_Init+0x68>
 65a:	ec e7       	ldi	r30, 0x7C	; 124
 65c:	f0 e0       	ldi	r31, 0x00	; 0
 65e:	80 81       	ld	r24, Z
 660:	80 68       	ori	r24, 0x80	; 128
 662:	80 83       	st	Z, r24
 664:	80 81       	ld	r24, Z
 666:	80 64       	ori	r24, 0x40	; 64
 668:	80 83       	st	Z, r24
 66a:	ea 81       	ldd	r30, Y+2	; 0x02
 66c:	8e 2f       	mov	r24, r30
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	fc 01       	movw	r30, r24
 672:	31 97       	sbiw	r30, 0x01	; 1
 674:	e7 30       	cpi	r30, 0x07	; 7
 676:	f1 05       	cpc	r31, r1
 678:	08 f0       	brcs	.+2      	; 0x67c <ADC_Init+0x7a>
 67a:	57 c0       	rjmp	.+174    	; 0x72a <ADC_Init+0x128>
 67c:	ec 5c       	subi	r30, 0xCC	; 204
 67e:	ff 4f       	sbci	r31, 0xFF	; 255
 680:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__tablejump2__>
 684:	ea e7       	ldi	r30, 0x7A	; 122
 686:	f0 e0       	ldi	r31, 0x00	; 0
 688:	80 81       	ld	r24, Z
 68a:	81 60       	ori	r24, 0x01	; 1
 68c:	80 83       	st	Z, r24
 68e:	80 81       	ld	r24, Z
 690:	8d 7f       	andi	r24, 0xFD	; 253
 692:	80 83       	st	Z, r24
 694:	80 81       	ld	r24, Z
 696:	8b 7f       	andi	r24, 0xFB	; 251
 698:	80 83       	st	Z, r24
 69a:	47 c0       	rjmp	.+142    	; 0x72a <ADC_Init+0x128>
 69c:	ea e7       	ldi	r30, 0x7A	; 122
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	80 81       	ld	r24, Z
 6a2:	8e 7f       	andi	r24, 0xFE	; 254
 6a4:	80 83       	st	Z, r24
 6a6:	80 81       	ld	r24, Z
 6a8:	82 60       	ori	r24, 0x02	; 2
 6aa:	80 83       	st	Z, r24
 6ac:	80 81       	ld	r24, Z
 6ae:	8b 7f       	andi	r24, 0xFB	; 251
 6b0:	80 83       	st	Z, r24
 6b2:	3b c0       	rjmp	.+118    	; 0x72a <ADC_Init+0x128>
 6b4:	ea e7       	ldi	r30, 0x7A	; 122
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	80 81       	ld	r24, Z
 6ba:	81 60       	ori	r24, 0x01	; 1
 6bc:	80 83       	st	Z, r24
 6be:	80 81       	ld	r24, Z
 6c0:	82 60       	ori	r24, 0x02	; 2
 6c2:	80 83       	st	Z, r24
 6c4:	80 81       	ld	r24, Z
 6c6:	8b 7f       	andi	r24, 0xFB	; 251
 6c8:	80 83       	st	Z, r24
 6ca:	2f c0       	rjmp	.+94     	; 0x72a <ADC_Init+0x128>
 6cc:	ea e7       	ldi	r30, 0x7A	; 122
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	80 81       	ld	r24, Z
 6d2:	8e 7f       	andi	r24, 0xFE	; 254
 6d4:	80 83       	st	Z, r24
 6d6:	80 81       	ld	r24, Z
 6d8:	8d 7f       	andi	r24, 0xFD	; 253
 6da:	80 83       	st	Z, r24
 6dc:	80 81       	ld	r24, Z
 6de:	84 60       	ori	r24, 0x04	; 4
 6e0:	80 83       	st	Z, r24
 6e2:	23 c0       	rjmp	.+70     	; 0x72a <ADC_Init+0x128>
 6e4:	ea e7       	ldi	r30, 0x7A	; 122
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	80 81       	ld	r24, Z
 6ea:	81 60       	ori	r24, 0x01	; 1
 6ec:	80 83       	st	Z, r24
 6ee:	80 81       	ld	r24, Z
 6f0:	8d 7f       	andi	r24, 0xFD	; 253
 6f2:	80 83       	st	Z, r24
 6f4:	80 81       	ld	r24, Z
 6f6:	84 60       	ori	r24, 0x04	; 4
 6f8:	80 83       	st	Z, r24
 6fa:	17 c0       	rjmp	.+46     	; 0x72a <ADC_Init+0x128>
 6fc:	ea e7       	ldi	r30, 0x7A	; 122
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	8e 7f       	andi	r24, 0xFE	; 254
 704:	80 83       	st	Z, r24
 706:	80 81       	ld	r24, Z
 708:	82 60       	ori	r24, 0x02	; 2
 70a:	80 83       	st	Z, r24
 70c:	80 81       	ld	r24, Z
 70e:	84 60       	ori	r24, 0x04	; 4
 710:	80 83       	st	Z, r24
 712:	0b c0       	rjmp	.+22     	; 0x72a <ADC_Init+0x128>
 714:	ea e7       	ldi	r30, 0x7A	; 122
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	80 81       	ld	r24, Z
 71a:	81 60       	ori	r24, 0x01	; 1
 71c:	80 83       	st	Z, r24
 71e:	80 81       	ld	r24, Z
 720:	82 60       	ori	r24, 0x02	; 2
 722:	80 83       	st	Z, r24
 724:	80 81       	ld	r24, Z
 726:	84 60       	ori	r24, 0x04	; 4
 728:	80 83       	st	Z, r24
 72a:	89 81       	ldd	r24, Y+1	; 0x01
 72c:	82 30       	cpi	r24, 0x02	; 2
 72e:	89 f1       	breq	.+98     	; 0x792 <ADC_Init+0x190>
 730:	28 f4       	brcc	.+10     	; 0x73c <ADC_Init+0x13a>
 732:	88 23       	and	r24, r24
 734:	59 f0       	breq	.+22     	; 0x74c <ADC_Init+0x14a>
 736:	81 30       	cpi	r24, 0x01	; 1
 738:	e9 f0       	breq	.+58     	; 0x774 <ADC_Init+0x172>
 73a:	66 c0       	rjmp	.+204    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 73c:	84 30       	cpi	r24, 0x04	; 4
 73e:	09 f4       	brne	.+2      	; 0x742 <ADC_Init+0x140>
 740:	46 c0       	rjmp	.+140    	; 0x7ce <ADC_Init+0x1cc>
 742:	b0 f1       	brcs	.+108    	; 0x7b0 <ADC_Init+0x1ae>
 744:	85 30       	cpi	r24, 0x05	; 5
 746:	09 f4       	brne	.+2      	; 0x74a <ADC_Init+0x148>
 748:	51 c0       	rjmp	.+162    	; 0x7ec <ADC_Init+0x1ea>
 74a:	5e c0       	rjmp	.+188    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 74c:	ee e7       	ldi	r30, 0x7E	; 126
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	80 81       	ld	r24, Z
 752:	81 60       	ori	r24, 0x01	; 1
 754:	80 83       	st	Z, r24
 756:	ec e7       	ldi	r30, 0x7C	; 124
 758:	f0 e0       	ldi	r31, 0x00	; 0
 75a:	80 81       	ld	r24, Z
 75c:	8e 7f       	andi	r24, 0xFE	; 254
 75e:	80 83       	st	Z, r24
 760:	80 81       	ld	r24, Z
 762:	8d 7f       	andi	r24, 0xFD	; 253
 764:	80 83       	st	Z, r24
 766:	80 81       	ld	r24, Z
 768:	8b 7f       	andi	r24, 0xFB	; 251
 76a:	80 83       	st	Z, r24
 76c:	80 81       	ld	r24, Z
 76e:	87 7f       	andi	r24, 0xF7	; 247
 770:	80 83       	st	Z, r24
 772:	4a c0       	rjmp	.+148    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 774:	ec e7       	ldi	r30, 0x7C	; 124
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	80 81       	ld	r24, Z
 77a:	81 60       	ori	r24, 0x01	; 1
 77c:	80 83       	st	Z, r24
 77e:	80 81       	ld	r24, Z
 780:	8d 7f       	andi	r24, 0xFD	; 253
 782:	80 83       	st	Z, r24
 784:	80 81       	ld	r24, Z
 786:	8b 7f       	andi	r24, 0xFB	; 251
 788:	80 83       	st	Z, r24
 78a:	80 81       	ld	r24, Z
 78c:	87 7f       	andi	r24, 0xF7	; 247
 78e:	80 83       	st	Z, r24
 790:	3b c0       	rjmp	.+118    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 792:	ec e7       	ldi	r30, 0x7C	; 124
 794:	f0 e0       	ldi	r31, 0x00	; 0
 796:	80 81       	ld	r24, Z
 798:	8e 7f       	andi	r24, 0xFE	; 254
 79a:	80 83       	st	Z, r24
 79c:	80 81       	ld	r24, Z
 79e:	82 60       	ori	r24, 0x02	; 2
 7a0:	80 83       	st	Z, r24
 7a2:	80 81       	ld	r24, Z
 7a4:	8b 7f       	andi	r24, 0xFB	; 251
 7a6:	80 83       	st	Z, r24
 7a8:	80 81       	ld	r24, Z
 7aa:	87 7f       	andi	r24, 0xF7	; 247
 7ac:	80 83       	st	Z, r24
 7ae:	2c c0       	rjmp	.+88     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7b0:	ec e7       	ldi	r30, 0x7C	; 124
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	80 81       	ld	r24, Z
 7b6:	81 60       	ori	r24, 0x01	; 1
 7b8:	80 83       	st	Z, r24
 7ba:	80 81       	ld	r24, Z
 7bc:	82 60       	ori	r24, 0x02	; 2
 7be:	80 83       	st	Z, r24
 7c0:	80 81       	ld	r24, Z
 7c2:	8b 7f       	andi	r24, 0xFB	; 251
 7c4:	80 83       	st	Z, r24
 7c6:	80 81       	ld	r24, Z
 7c8:	87 7f       	andi	r24, 0xF7	; 247
 7ca:	80 83       	st	Z, r24
 7cc:	1d c0       	rjmp	.+58     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7ce:	ec e7       	ldi	r30, 0x7C	; 124
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	80 81       	ld	r24, Z
 7d4:	8e 7f       	andi	r24, 0xFE	; 254
 7d6:	80 83       	st	Z, r24
 7d8:	80 81       	ld	r24, Z
 7da:	8d 7f       	andi	r24, 0xFD	; 253
 7dc:	80 83       	st	Z, r24
 7de:	80 81       	ld	r24, Z
 7e0:	84 60       	ori	r24, 0x04	; 4
 7e2:	80 83       	st	Z, r24
 7e4:	80 81       	ld	r24, Z
 7e6:	87 7f       	andi	r24, 0xF7	; 247
 7e8:	80 83       	st	Z, r24
 7ea:	0e c0       	rjmp	.+28     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7ec:	ec e7       	ldi	r30, 0x7C	; 124
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	80 81       	ld	r24, Z
 7f2:	8e 7f       	andi	r24, 0xFE	; 254
 7f4:	80 83       	st	Z, r24
 7f6:	80 81       	ld	r24, Z
 7f8:	82 60       	ori	r24, 0x02	; 2
 7fa:	80 83       	st	Z, r24
 7fc:	80 81       	ld	r24, Z
 7fe:	8b 7f       	andi	r24, 0xFB	; 251
 800:	80 83       	st	Z, r24
 802:	80 81       	ld	r24, Z
 804:	87 7f       	andi	r24, 0xF7	; 247
 806:	80 83       	st	Z, r24
 808:	eb 81       	ldd	r30, Y+3	; 0x03
 80a:	8e 2f       	mov	r24, r30
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	89 30       	cpi	r24, 0x09	; 9
 810:	91 05       	cpc	r25, r1
 812:	08 f0       	brcs	.+2      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 814:	92 c0       	rjmp	.+292    	; 0x93a <__stack+0x3b>
 816:	fc 01       	movw	r30, r24
 818:	e5 5c       	subi	r30, 0xC5	; 197
 81a:	ff 4f       	sbci	r31, 0xFF	; 255
 81c:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__tablejump2__>
 820:	ea e7       	ldi	r30, 0x7A	; 122
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	80 81       	ld	r24, Z
 826:	8f 7d       	andi	r24, 0xDF	; 223
 828:	80 83       	st	Z, r24
 82a:	87 c0       	rjmp	.+270    	; 0x93a <__stack+0x3b>
 82c:	ea e7       	ldi	r30, 0x7A	; 122
 82e:	f0 e0       	ldi	r31, 0x00	; 0
 830:	80 81       	ld	r24, Z
 832:	80 62       	ori	r24, 0x20	; 32
 834:	80 83       	st	Z, r24
 836:	eb e7       	ldi	r30, 0x7B	; 123
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	80 81       	ld	r24, Z
 83c:	8e 7f       	andi	r24, 0xFE	; 254
 83e:	80 83       	st	Z, r24
 840:	80 81       	ld	r24, Z
 842:	8d 7f       	andi	r24, 0xFD	; 253
 844:	80 83       	st	Z, r24
 846:	80 81       	ld	r24, Z
 848:	8b 7f       	andi	r24, 0xFB	; 251
 84a:	80 83       	st	Z, r24
 84c:	76 c0       	rjmp	.+236    	; 0x93a <__stack+0x3b>
 84e:	ea e7       	ldi	r30, 0x7A	; 122
 850:	f0 e0       	ldi	r31, 0x00	; 0
 852:	80 81       	ld	r24, Z
 854:	80 62       	ori	r24, 0x20	; 32
 856:	80 83       	st	Z, r24
 858:	eb e7       	ldi	r30, 0x7B	; 123
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	80 81       	ld	r24, Z
 85e:	81 60       	ori	r24, 0x01	; 1
 860:	80 83       	st	Z, r24
 862:	80 81       	ld	r24, Z
 864:	8d 7f       	andi	r24, 0xFD	; 253
 866:	80 83       	st	Z, r24
 868:	80 81       	ld	r24, Z
 86a:	8b 7f       	andi	r24, 0xFB	; 251
 86c:	80 83       	st	Z, r24
 86e:	65 c0       	rjmp	.+202    	; 0x93a <__stack+0x3b>
 870:	ea e7       	ldi	r30, 0x7A	; 122
 872:	f0 e0       	ldi	r31, 0x00	; 0
 874:	80 81       	ld	r24, Z
 876:	80 62       	ori	r24, 0x20	; 32
 878:	80 83       	st	Z, r24
 87a:	eb e7       	ldi	r30, 0x7B	; 123
 87c:	f0 e0       	ldi	r31, 0x00	; 0
 87e:	80 81       	ld	r24, Z
 880:	8e 7f       	andi	r24, 0xFE	; 254
 882:	80 83       	st	Z, r24
 884:	80 81       	ld	r24, Z
 886:	82 60       	ori	r24, 0x02	; 2
 888:	80 83       	st	Z, r24
 88a:	80 81       	ld	r24, Z
 88c:	8b 7f       	andi	r24, 0xFB	; 251
 88e:	80 83       	st	Z, r24
 890:	54 c0       	rjmp	.+168    	; 0x93a <__stack+0x3b>
 892:	ea e7       	ldi	r30, 0x7A	; 122
 894:	f0 e0       	ldi	r31, 0x00	; 0
 896:	80 81       	ld	r24, Z
 898:	80 62       	ori	r24, 0x20	; 32
 89a:	80 83       	st	Z, r24
 89c:	eb e7       	ldi	r30, 0x7B	; 123
 89e:	f0 e0       	ldi	r31, 0x00	; 0
 8a0:	80 81       	ld	r24, Z
 8a2:	81 60       	ori	r24, 0x01	; 1
 8a4:	80 83       	st	Z, r24
 8a6:	80 81       	ld	r24, Z
 8a8:	82 60       	ori	r24, 0x02	; 2
 8aa:	80 83       	st	Z, r24
 8ac:	80 81       	ld	r24, Z
 8ae:	8b 7f       	andi	r24, 0xFB	; 251
 8b0:	80 83       	st	Z, r24
 8b2:	43 c0       	rjmp	.+134    	; 0x93a <__stack+0x3b>
 8b4:	ea e7       	ldi	r30, 0x7A	; 122
 8b6:	f0 e0       	ldi	r31, 0x00	; 0
 8b8:	80 81       	ld	r24, Z
 8ba:	80 62       	ori	r24, 0x20	; 32
 8bc:	80 83       	st	Z, r24
 8be:	eb e7       	ldi	r30, 0x7B	; 123
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	80 81       	ld	r24, Z
 8c4:	8e 7f       	andi	r24, 0xFE	; 254
 8c6:	80 83       	st	Z, r24
 8c8:	80 81       	ld	r24, Z
 8ca:	8d 7f       	andi	r24, 0xFD	; 253
 8cc:	80 83       	st	Z, r24
 8ce:	80 81       	ld	r24, Z
 8d0:	84 60       	ori	r24, 0x04	; 4
 8d2:	80 83       	st	Z, r24
 8d4:	32 c0       	rjmp	.+100    	; 0x93a <__stack+0x3b>
 8d6:	ea e7       	ldi	r30, 0x7A	; 122
 8d8:	f0 e0       	ldi	r31, 0x00	; 0
 8da:	80 81       	ld	r24, Z
 8dc:	80 62       	ori	r24, 0x20	; 32
 8de:	80 83       	st	Z, r24
 8e0:	eb e7       	ldi	r30, 0x7B	; 123
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	80 81       	ld	r24, Z
 8e6:	81 60       	ori	r24, 0x01	; 1
 8e8:	80 83       	st	Z, r24
 8ea:	80 81       	ld	r24, Z
 8ec:	8d 7f       	andi	r24, 0xFD	; 253
 8ee:	80 83       	st	Z, r24
 8f0:	80 81       	ld	r24, Z
 8f2:	84 60       	ori	r24, 0x04	; 4
 8f4:	80 83       	st	Z, r24
 8f6:	21 c0       	rjmp	.+66     	; 0x93a <__stack+0x3b>
 8f8:	ea e7       	ldi	r30, 0x7A	; 122
 8fa:	f0 e0       	ldi	r31, 0x00	; 0
 8fc:	80 81       	ld	r24, Z
 8fe:	80 62       	ori	r24, 0x20	; 32
 900:	80 83       	st	Z, r24
 902:	eb e7       	ldi	r30, 0x7B	; 123
 904:	f0 e0       	ldi	r31, 0x00	; 0
 906:	80 81       	ld	r24, Z
 908:	8e 7f       	andi	r24, 0xFE	; 254
 90a:	80 83       	st	Z, r24
 90c:	80 81       	ld	r24, Z
 90e:	82 60       	ori	r24, 0x02	; 2
 910:	80 83       	st	Z, r24
 912:	80 81       	ld	r24, Z
 914:	84 60       	ori	r24, 0x04	; 4
 916:	80 83       	st	Z, r24
 918:	10 c0       	rjmp	.+32     	; 0x93a <__stack+0x3b>
 91a:	ea e7       	ldi	r30, 0x7A	; 122
 91c:	f0 e0       	ldi	r31, 0x00	; 0
 91e:	80 81       	ld	r24, Z
 920:	80 62       	ori	r24, 0x20	; 32
 922:	80 83       	st	Z, r24
 924:	eb e7       	ldi	r30, 0x7B	; 123
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	80 81       	ld	r24, Z
 92a:	81 60       	ori	r24, 0x01	; 1
 92c:	80 83       	st	Z, r24
 92e:	80 81       	ld	r24, Z
 930:	82 60       	ori	r24, 0x02	; 2
 932:	80 83       	st	Z, r24
 934:	80 81       	ld	r24, Z
 936:	84 60       	ori	r24, 0x04	; 4
 938:	80 83       	st	Z, r24
 93a:	8c 81       	ldd	r24, Y+4	; 0x04
 93c:	88 23       	and	r24, r24
 93e:	19 f0       	breq	.+6      	; 0x946 <__stack+0x47>
 940:	81 30       	cpi	r24, 0x01	; 1
 942:	39 f0       	breq	.+14     	; 0x952 <__stack+0x53>
 944:	0b c0       	rjmp	.+22     	; 0x95c <__stack+0x5d>
 946:	ec e7       	ldi	r30, 0x7C	; 124
 948:	f0 e0       	ldi	r31, 0x00	; 0
 94a:	80 81       	ld	r24, Z
 94c:	8f 7d       	andi	r24, 0xDF	; 223
 94e:	80 83       	st	Z, r24
 950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0x5d>
 952:	ec e7       	ldi	r30, 0x7C	; 124
 954:	f0 e0       	ldi	r31, 0x00	; 0
 956:	80 81       	ld	r24, Z
 958:	80 62       	ori	r24, 0x20	; 32
 95a:	80 83       	st	Z, r24
 95c:	8d 81       	ldd	r24, Y+5	; 0x05
 95e:	88 23       	and	r24, r24
 960:	19 f0       	breq	.+6      	; 0x968 <__stack+0x69>
 962:	81 30       	cpi	r24, 0x01	; 1
 964:	39 f0       	breq	.+14     	; 0x974 <__stack+0x75>
 966:	0b c0       	rjmp	.+22     	; 0x97e <__stack+0x7f>
 968:	ea e7       	ldi	r30, 0x7A	; 122
 96a:	f0 e0       	ldi	r31, 0x00	; 0
 96c:	80 81       	ld	r24, Z
 96e:	88 60       	ori	r24, 0x08	; 8
 970:	80 83       	st	Z, r24
 972:	05 c0       	rjmp	.+10     	; 0x97e <__stack+0x7f>
 974:	ea e7       	ldi	r30, 0x7A	; 122
 976:	f0 e0       	ldi	r31, 0x00	; 0
 978:	80 81       	ld	r24, Z
 97a:	87 7f       	andi	r24, 0xF7	; 247
 97c:	80 83       	st	Z, r24
 97e:	df 91       	pop	r29
 980:	cf 91       	pop	r28
 982:	08 95       	ret

00000984 <Get_ADCRegister>:
	}
}

uint16 Get_ADCRegister()
{
	WRITE_BIT(ADCSRA , ADSC , HIGH); // start conversion
 984:	ea e7       	ldi	r30, 0x7A	; 122
 986:	f0 e0       	ldi	r31, 0x00	; 0
 988:	80 81       	ld	r24, Z
 98a:	80 64       	ori	r24, 0x40	; 64
 98c:	80 83       	st	Z, r24
	return (((uint8)ADCL)|(ADCH<<8));
 98e:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 992:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	98 2f       	mov	r25, r24
 99a:	88 27       	eor	r24, r24
}
 99c:	82 2b       	or	r24, r18
 99e:	08 95       	ret

000009a0 <GPIO_init_pin>:
	PORT_CLEAR_MASK(*register_Port[reg], val);
}

void GPIO_write_port_mask(uint8 reg, uint8 setval, uint8 clearval)
{
	PORT_MASK(*register_Port[reg], setval, clearval);
 9a0:	42 30       	cpi	r20, 0x02	; 2
 9a2:	10 f5       	brcc	.+68     	; 0x9e8 <GPIO_init_pin+0x48>
 9a4:	68 30       	cpi	r22, 0x08	; 8
 9a6:	10 f5       	brcc	.+68     	; 0x9ec <GPIO_init_pin+0x4c>
 9a8:	83 30       	cpi	r24, 0x03	; 3
 9aa:	10 f5       	brcc	.+68     	; 0x9f0 <GPIO_init_pin+0x50>
 9ac:	e8 2f       	mov	r30, r24
 9ae:	f0 e0       	ldi	r31, 0x00	; 0
 9b0:	ee 0f       	add	r30, r30
 9b2:	ff 1f       	adc	r31, r31
 9b4:	ea 5f       	subi	r30, 0xFA	; 250
 9b6:	fe 4f       	sbci	r31, 0xFE	; 254
 9b8:	01 90       	ld	r0, Z+
 9ba:	f0 81       	ld	r31, Z
 9bc:	e0 2d       	mov	r30, r0
 9be:	20 81       	ld	r18, Z
 9c0:	81 e0       	ldi	r24, 0x01	; 1
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	06 2e       	mov	r0, r22
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <GPIO_init_pin+0x2c>
 9c8:	88 0f       	add	r24, r24
 9ca:	99 1f       	adc	r25, r25
 9cc:	0a 94       	dec	r0
 9ce:	e2 f7       	brpl	.-8      	; 0x9c8 <GPIO_init_pin+0x28>
 9d0:	50 e0       	ldi	r21, 0x00	; 0
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <GPIO_init_pin+0x38>
 9d4:	44 0f       	add	r20, r20
 9d6:	55 1f       	adc	r21, r21
 9d8:	6a 95       	dec	r22
 9da:	e2 f7       	brpl	.-8      	; 0x9d4 <GPIO_init_pin+0x34>
 9dc:	80 95       	com	r24
 9de:	82 23       	and	r24, r18
 9e0:	48 2b       	or	r20, r24
 9e2:	40 83       	st	Z, r20
 9e4:	81 e0       	ldi	r24, 0x01	; 1
 9e6:	08 95       	ret
 9e8:	82 e0       	ldi	r24, 0x02	; 2
 9ea:	08 95       	ret
 9ec:	82 e0       	ldi	r24, 0x02	; 2
 9ee:	08 95       	ret
 9f0:	82 e0       	ldi	r24, 0x02	; 2
 9f2:	08 95       	ret

000009f4 <GPIO_init_port>:
 9f4:	e8 2f       	mov	r30, r24
 9f6:	f0 e0       	ldi	r31, 0x00	; 0
 9f8:	ee 0f       	add	r30, r30
 9fa:	ff 1f       	adc	r31, r31
 9fc:	ea 5f       	subi	r30, 0xFA	; 250
 9fe:	fe 4f       	sbci	r31, 0xFE	; 254
 a00:	01 90       	ld	r0, Z+
 a02:	f0 81       	ld	r31, Z
 a04:	e0 2d       	mov	r30, r0
 a06:	60 83       	st	Z, r22
 a08:	08 95       	ret

00000a0a <GPIO_init_port_mask>:
 a0a:	e8 2f       	mov	r30, r24
 a0c:	f0 e0       	ldi	r31, 0x00	; 0
 a0e:	ee 0f       	add	r30, r30
 a10:	ff 1f       	adc	r31, r31
 a12:	ea 5f       	subi	r30, 0xFA	; 250
 a14:	fe 4f       	sbci	r31, 0xFE	; 254
 a16:	01 90       	ld	r0, Z+
 a18:	f0 81       	ld	r31, Z
 a1a:	e0 2d       	mov	r30, r0
 a1c:	80 81       	ld	r24, Z
 a1e:	68 2b       	or	r22, r24
 a20:	60 83       	st	Z, r22
 a22:	08 95       	ret

00000a24 <GPIO_write_pin>:
 a24:	42 30       	cpi	r20, 0x02	; 2
 a26:	10 f5       	brcc	.+68     	; 0xa6c <GPIO_write_pin+0x48>
 a28:	68 30       	cpi	r22, 0x08	; 8
 a2a:	10 f5       	brcc	.+68     	; 0xa70 <GPIO_write_pin+0x4c>
 a2c:	83 30       	cpi	r24, 0x03	; 3
 a2e:	10 f5       	brcc	.+68     	; 0xa74 <GPIO_write_pin+0x50>
 a30:	e8 2f       	mov	r30, r24
 a32:	f0 e0       	ldi	r31, 0x00	; 0
 a34:	ee 0f       	add	r30, r30
 a36:	ff 1f       	adc	r31, r31
 a38:	e0 50       	subi	r30, 0x00	; 0
 a3a:	ff 4f       	sbci	r31, 0xFF	; 255
 a3c:	01 90       	ld	r0, Z+
 a3e:	f0 81       	ld	r31, Z
 a40:	e0 2d       	mov	r30, r0
 a42:	20 81       	ld	r18, Z
 a44:	81 e0       	ldi	r24, 0x01	; 1
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	06 2e       	mov	r0, r22
 a4a:	02 c0       	rjmp	.+4      	; 0xa50 <GPIO_write_pin+0x2c>
 a4c:	88 0f       	add	r24, r24
 a4e:	99 1f       	adc	r25, r25
 a50:	0a 94       	dec	r0
 a52:	e2 f7       	brpl	.-8      	; 0xa4c <GPIO_write_pin+0x28>
 a54:	50 e0       	ldi	r21, 0x00	; 0
 a56:	02 c0       	rjmp	.+4      	; 0xa5c <GPIO_write_pin+0x38>
 a58:	44 0f       	add	r20, r20
 a5a:	55 1f       	adc	r21, r21
 a5c:	6a 95       	dec	r22
 a5e:	e2 f7       	brpl	.-8      	; 0xa58 <GPIO_write_pin+0x34>
 a60:	80 95       	com	r24
 a62:	82 23       	and	r24, r18
 a64:	48 2b       	or	r20, r24
 a66:	40 83       	st	Z, r20
 a68:	81 e0       	ldi	r24, 0x01	; 1
 a6a:	08 95       	ret
 a6c:	82 e0       	ldi	r24, 0x02	; 2
 a6e:	08 95       	ret
 a70:	82 e0       	ldi	r24, 0x02	; 2
 a72:	08 95       	ret
 a74:	82 e0       	ldi	r24, 0x02	; 2
 a76:	08 95       	ret

00000a78 <GPIO_write_port>:
 a78:	e8 2f       	mov	r30, r24
 a7a:	f0 e0       	ldi	r31, 0x00	; 0
 a7c:	ee 0f       	add	r30, r30
 a7e:	ff 1f       	adc	r31, r31
 a80:	e0 50       	subi	r30, 0x00	; 0
 a82:	ff 4f       	sbci	r31, 0xFF	; 255
 a84:	01 90       	ld	r0, Z+
 a86:	f0 81       	ld	r31, Z
 a88:	e0 2d       	mov	r30, r0
 a8a:	60 83       	st	Z, r22
 a8c:	08 95       	ret

00000a8e <GPIO_write_port_mask_HN>:
}

void GPIO_write_port_mask_HN(uint8 reg, uint8 VAL)
{
	HIGHER_NIBBLE_CLEAR_REG(*register_Port[reg]);
 a8e:	e8 2f       	mov	r30, r24
 a90:	f0 e0       	ldi	r31, 0x00	; 0
 a92:	ee 0f       	add	r30, r30
 a94:	ff 1f       	adc	r31, r31
 a96:	e0 50       	subi	r30, 0x00	; 0
 a98:	ff 4f       	sbci	r31, 0xFF	; 255
 a9a:	a0 81       	ld	r26, Z
 a9c:	b1 81       	ldd	r27, Z+1	; 0x01
 a9e:	8c 91       	ld	r24, X
 aa0:	8f 70       	andi	r24, 0x0F	; 15
 aa2:	8c 93       	st	X, r24
	HNDATA_HNREG(*register_Port[reg], VAL);
 aa4:	01 90       	ld	r0, Z+
 aa6:	f0 81       	ld	r31, Z
 aa8:	e0 2d       	mov	r30, r0
 aaa:	80 81       	ld	r24, Z
 aac:	60 7f       	andi	r22, 0xF0	; 240
 aae:	68 2b       	or	r22, r24
 ab0:	60 83       	st	Z, r22
 ab2:	08 95       	ret

00000ab4 <GPIO_write_port_mask_LN>:
}

void GPIO_write_port_mask_LN(uint8 reg, uint8 VAL)
{
	HIGHER_NIBBLE_CLEAR_REG(*register_Port[reg]);
 ab4:	e8 2f       	mov	r30, r24
 ab6:	f0 e0       	ldi	r31, 0x00	; 0
 ab8:	ee 0f       	add	r30, r30
 aba:	ff 1f       	adc	r31, r31
 abc:	e0 50       	subi	r30, 0x00	; 0
 abe:	ff 4f       	sbci	r31, 0xFF	; 255
 ac0:	a0 81       	ld	r26, Z
 ac2:	b1 81       	ldd	r27, Z+1	; 0x01
 ac4:	8c 91       	ld	r24, X
 ac6:	8f 70       	andi	r24, 0x0F	; 15
 ac8:	8c 93       	st	X, r24
	LNDATA_HNREG(*register_Port[reg], VAL);
 aca:	01 90       	ld	r0, Z+
 acc:	f0 81       	ld	r31, Z
 ace:	e0 2d       	mov	r30, r0
 ad0:	80 81       	ld	r24, Z
 ad2:	90 e1       	ldi	r25, 0x10	; 16
 ad4:	69 9f       	mul	r22, r25
 ad6:	b0 01       	movw	r22, r0
 ad8:	11 24       	eor	r1, r1
 ada:	68 2b       	or	r22, r24
 adc:	60 83       	st	Z, r22
 ade:	08 95       	ret

00000ae0 <__vector_1>:
	 }
	 
 }
 //------------------------------------------
 ISR(INT0_vect)
 {
 ae0:	1f 92       	push	r1
 ae2:	0f 92       	push	r0
 ae4:	0f b6       	in	r0, 0x3f	; 63
 ae6:	0f 92       	push	r0
 ae8:	11 24       	eor	r1, r1
 aea:	2f 93       	push	r18
 aec:	3f 93       	push	r19
 aee:	4f 93       	push	r20
 af0:	5f 93       	push	r21
 af2:	6f 93       	push	r22
 af4:	7f 93       	push	r23
 af6:	8f 93       	push	r24
 af8:	9f 93       	push	r25
 afa:	af 93       	push	r26
 afc:	bf 93       	push	r27
 afe:	ef 93       	push	r30
 b00:	ff 93       	push	r31

	 GPIO_int0_ptr();
 b02:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <GPIO_int0_ptr>
 b06:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <GPIO_int0_ptr+0x1>
 b0a:	09 95       	icall
 }
 b0c:	ff 91       	pop	r31
 b0e:	ef 91       	pop	r30
 b10:	bf 91       	pop	r27
 b12:	af 91       	pop	r26
 b14:	9f 91       	pop	r25
 b16:	8f 91       	pop	r24
 b18:	7f 91       	pop	r23
 b1a:	6f 91       	pop	r22
 b1c:	5f 91       	pop	r21
 b1e:	4f 91       	pop	r20
 b20:	3f 91       	pop	r19
 b22:	2f 91       	pop	r18
 b24:	0f 90       	pop	r0
 b26:	0f be       	out	0x3f, r0	; 63
 b28:	0f 90       	pop	r0
 b2a:	1f 90       	pop	r1
 b2c:	18 95       	reti

00000b2e <__vector_2>:
 //-------------------------------------
 ISR(INT1_vect)
 {
 b2e:	1f 92       	push	r1
 b30:	0f 92       	push	r0
 b32:	0f b6       	in	r0, 0x3f	; 63
 b34:	0f 92       	push	r0
 b36:	11 24       	eor	r1, r1
 b38:	2f 93       	push	r18
 b3a:	3f 93       	push	r19
 b3c:	4f 93       	push	r20
 b3e:	5f 93       	push	r21
 b40:	6f 93       	push	r22
 b42:	7f 93       	push	r23
 b44:	8f 93       	push	r24
 b46:	9f 93       	push	r25
 b48:	af 93       	push	r26
 b4a:	bf 93       	push	r27
 b4c:	ef 93       	push	r30
 b4e:	ff 93       	push	r31
	 (*GPIO_int1_ptr)();
 b50:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <GPIO_int1_ptr>
 b54:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <GPIO_int1_ptr+0x1>
 b58:	09 95       	icall
 }
 b5a:	ff 91       	pop	r31
 b5c:	ef 91       	pop	r30
 b5e:	bf 91       	pop	r27
 b60:	af 91       	pop	r26
 b62:	9f 91       	pop	r25
 b64:	8f 91       	pop	r24
 b66:	7f 91       	pop	r23
 b68:	6f 91       	pop	r22
 b6a:	5f 91       	pop	r21
 b6c:	4f 91       	pop	r20
 b6e:	3f 91       	pop	r19
 b70:	2f 91       	pop	r18
 b72:	0f 90       	pop	r0
 b74:	0f be       	out	0x3f, r0	; 63
 b76:	0f 90       	pop	r0
 b78:	1f 90       	pop	r1
 b7a:	18 95       	reti

00000b7c <__vector_16>:

	 TCCR0B|=scaler0_global;
 }

 ISR(TIMER0_OVF_vect)
 {
 b7c:	1f 92       	push	r1
 b7e:	0f 92       	push	r0
 b80:	0f b6       	in	r0, 0x3f	; 63
 b82:	0f 92       	push	r0
 b84:	11 24       	eor	r1, r1
 b86:	2f 93       	push	r18
 b88:	3f 93       	push	r19
 b8a:	4f 93       	push	r20
 b8c:	5f 93       	push	r21
 b8e:	6f 93       	push	r22
 b90:	7f 93       	push	r23
 b92:	8f 93       	push	r24
 b94:	9f 93       	push	r25
 b96:	af 93       	push	r26
 b98:	bf 93       	push	r27
 b9a:	ef 93       	push	r30
 b9c:	ff 93       	push	r31
	 if(TIMER0_OVF_Fptr!=NULLPTR)
 b9e:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <TIMER0_OVF_Fptr>
 ba2:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <TIMER0_OVF_Fptr+0x1>
 ba6:	30 97       	sbiw	r30, 0x00	; 0
 ba8:	09 f0       	breq	.+2      	; 0xbac <__vector_16+0x30>
	 {
		 TIMER0_OVF_Fptr();
 baa:	09 95       	icall
	 }
 bac:	ff 91       	pop	r31
 bae:	ef 91       	pop	r30
 bb0:	bf 91       	pop	r27
 bb2:	af 91       	pop	r26
 bb4:	9f 91       	pop	r25
 bb6:	8f 91       	pop	r24
 bb8:	7f 91       	pop	r23
 bba:	6f 91       	pop	r22
 bbc:	5f 91       	pop	r21
 bbe:	4f 91       	pop	r20
 bc0:	3f 91       	pop	r19
 bc2:	2f 91       	pop	r18
 bc4:	0f 90       	pop	r0
 bc6:	0f be       	out	0x3f, r0	; 63
 bc8:	0f 90       	pop	r0
 bca:	1f 90       	pop	r1
 bcc:	18 95       	reti

00000bce <__tablejump2__>:
 bce:	ee 0f       	add	r30, r30
 bd0:	ff 1f       	adc	r31, r31
 bd2:	05 90       	lpm	r0, Z+
 bd4:	f4 91       	lpm	r31, Z
 bd6:	e0 2d       	mov	r30, r0
 bd8:	09 94       	ijmp

00000bda <__umulhisi3>:
 bda:	a2 9f       	mul	r26, r18
 bdc:	b0 01       	movw	r22, r0
 bde:	b3 9f       	mul	r27, r19
 be0:	c0 01       	movw	r24, r0
 be2:	a3 9f       	mul	r26, r19
 be4:	70 0d       	add	r23, r0
 be6:	81 1d       	adc	r24, r1
 be8:	11 24       	eor	r1, r1
 bea:	91 1d       	adc	r25, r1
 bec:	b2 9f       	mul	r27, r18
 bee:	70 0d       	add	r23, r0
 bf0:	81 1d       	adc	r24, r1
 bf2:	11 24       	eor	r1, r1
 bf4:	91 1d       	adc	r25, r1
 bf6:	08 95       	ret

00000bf8 <_exit>:
 bf8:	f8 94       	cli

00000bfa <__stop_program>:
 bfa:	ff cf       	rjmp	.-2      	; 0xbfa <__stop_program>
